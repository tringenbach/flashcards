{"version":3,"sources":["audio/right.mp3","logo.svg","audio/wrong.mp3","App.js","reportWebVitals.js","index.js"],"names":["getRandomProblem","problems","max","length","Math","floor","random","RightAudios","count","useState","times","setTimes","onEnded","e","target","play","autoplay","src","right","WrongAudio","wrong","App","streak","setStreak","rv","i","j","push","problem","solution","getAdditionProblems","setProblem","answered","setAnswered","userSolution","setUserSolution","correctAnswer","incorrectAnswer","className","repeat","style","fontSize","display","onSubmit","autoFocus","type","size","onInput","value","marginLeft","onClick","controls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAAe,GCAA,I,MDAA,IAA0B,mCEA1B,MAA0B,kC,OCoBzC,SAASA,EAAiBC,GACxB,IACMC,EAAMD,EAASE,OAErB,OAAOF,EADOG,KAAKC,MAAMD,KAAKE,UAAYJ,EAF9B,OAMd,SAASK,EAAT,GAA+B,IAATC,EAAQ,EAARA,MACpB,EAA4BC,mBAASD,GAArC,mBAAQE,EAAR,KAAeC,EAAf,KACA,OAAO,uBAAOC,QAAS,SAACC,GAClBH,EAAQ,IACVG,EAAEC,OAAOC,OACTJ,EAASD,EAAQ,KAElBM,SAAS,OAAOC,IAAMC,IAM3B,SAASC,IACP,OAAO,uBAAOH,SAAS,OAAOC,IAAMG,IA0EvBC,MAvEf,WACE,MAA8BZ,mBAAS,GAAvC,mBAAQa,EAAR,KAAgBC,EAAhB,KACMtB,EAvCR,WAEE,IADA,IAAMuB,EAAK,GACFC,EAAI,EAAGA,GAAK,GAAIA,IACvB,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACvBF,EAAGG,KAAK,CACNC,QAAQ,GAAD,OAAKH,EAAL,cAAYC,GACnBG,SAAUJ,EAAIC,IAIpB,OAAOF,EA6BUM,GACjB,EAAgCrB,mBAAST,EAAiBC,IAA1D,mBAAQ2B,EAAR,KAAiBG,EAAjB,KACA,EAAkCtB,oBAAS,GAA3C,mBAAQuB,EAAR,KAAkBC,EAAlB,KACA,EAA0CxB,mBAAS,MAAnD,mBAAQyB,EAAR,KAAsBC,EAAtB,KAEMC,EAAiBJ,GAAYE,GAAgBN,EAAQC,SACrDQ,EAAmBL,GAAYE,GAAgBN,EAAQC,SAE7D,OACE,sBAAKS,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UAEIhB,EAAS,GACT,yCACWA,EADX,IACoB,SAAIiB,OAAOjB,MAGjC,oBAAGkB,MAAO,CAAEC,SAAU,QAAtB,UACGb,EAAQA,QADX,MAEKI,GACH,uBAAMQ,MAAO,CAAEE,QAAS,UAAYC,SAAU,WAC5CV,GAAY,GACRC,GAAgBN,EAAQC,SAAUN,EAAUD,EAAS,GACpDC,EAAU,IAHjB,UAKE,qCAAc,uBAAOqB,WAAS,EAACC,KAAK,OAAOC,KAAM,EAAGN,MAAO,CAAEC,SAAU,QAASM,QAAS,SAAAlC,GAAC,OAAIsB,EAAgBtB,EAAEC,OAAOkC,aAGvHhB,GAAY,qCAAQE,KACpBE,GAAiB,2CAAQ,cAAC7B,EAAD,CAAaC,MAAQc,OAC9Ce,GAAmB,2CAAQ,cAAClB,EAAD,OAE3BkB,GACA,+BACE,wBAAQG,MAAO,CAAES,WAAY,QAAUC,QAAS,kBAAMjB,GAAY,IAAlE,yBAIJG,GACA,wBAAQI,MAAO,CAAES,WAAY,QAAUC,QAAS,WAC9CnB,EAAW/B,EAAiBC,IAC5BgC,GAAY,GACZE,EAAgB,OAHlB,qBAQAE,GACF,gDACgBT,EAAQC,eAK1B,iCACE,+CACS,uBAAOsB,UAAQ,EAAClC,IAAMC,OAE/B,+CACS,uBAAOiC,UAAQ,EAAClC,IAAMG,OAE/B,oDACc,uBAAO+B,UAAQ,EAAClC,IAAMG,cChG7BgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e9590c87.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/right.3e9687d7.mp3\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/wrong.4ab84dbd.mp3\";","import { useState, useRef } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport right from './audio/right.mp3';\nimport wrong from './audio/wrong.mp3'\n\n\nfunction getAdditionProblems() {\n  const rv = [];\n  for (let i = 0; i <= 10; i++) {\n    for (let j = 0; j <= 10; j++) {\n      rv.push({\n        problem: `${i} + ${j}`,\n        solution: i + j\n      });\n    }\n  }\n  return rv;\n}\n\nfunction getRandomProblem(problems) {\n  const min = 0;\n  const max = problems.length;\n  const index = Math.floor(Math.random() * (max - min) + min); \n  return problems[index];\n}\n\nfunction RightAudios({count}) {\n  const [ times, setTimes ] = useState(count);\n  return <audio onEnded={(e) => {\n    if (times > 1) {\n      e.target.play();\n      setTimes(times - 1);\n    }\n  }} autoplay=\"true\" src={ right } /> \n}\n\nfunction RightAudio() {\n  return <audio autoplay=\"true\" src={ right } />\n}\nfunction WrongAudio() {\n  return <audio autoplay=\"true\" src={ wrong } />\n}\n\nfunction App() {\n  const [ streak, setStreak ] = useState(0);\n  const problems = getAdditionProblems();\n  const [ problem, setProblem ] = useState(getRandomProblem(problems));\n  const [ answered, setAnswered ] = useState(false);\n  const [ userSolution, setUserSolution ] = useState(null);\n\n  const correctAnswer = (answered && userSolution == problem.solution);\n  const incorrectAnswer = (answered && userSolution != problem.solution)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        { streak > 0 &&\n          <p>\n            Streak: {streak} {\"✅\".repeat(streak)}\n          </p>\n        }\n        <p style={{ fontSize: '40px'}}>\n          {problem.problem} = \n          { !answered &&\n          <form style={{ display: 'inline' }} onSubmit={() => {\n            setAnswered(true);\n            if (userSolution == problem.solution) setStreak(streak + 1);\n            else setStreak(0);\n          }}>\n            <span> </span><input autoFocus type=\"text\" size={2} style={{ fontSize: '40px'}} onInput={e => setUserSolution(e.target.value)}/>\n          </form>\n          }\n          { answered && <span> {userSolution}</span>}\n          { correctAnswer && <span> ✅<RightAudios count={ streak } /></span>}\n          { incorrectAnswer && <span> ❌<WrongAudio /></span>}\n\n          { incorrectAnswer && (\n            <span>\n              <button style={{ marginLeft: '20px' }} onClick={() => setAnswered(false)}>Try Again</button>\n            </span>\n        )}\n\n        { correctAnswer && (\n          <button style={{ marginLeft: '20px' }} onClick={() => {\n            setProblem(getRandomProblem(problems));\n            setAnswered(false);\n            setUserSolution(null);\n          }}>Next</button>\n        )}\n\n        </p>\n        { incorrectAnswer &&\n        <p>\n        The answer was {problem.solution}\n        </p>\n        }\n\n      </header>\n      <main>\n        <div>\n          Right ✅<audio controls src={ right } />\n        </div>\n        <div>\n          Wrong ❌<audio controls src={ wrong } />\n        </div>\n        <div>\n          Times up! ⏰ <audio controls src={ wrong } />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}